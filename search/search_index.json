{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"!function(c,h,i,m,p){m=c.createElement(h),p=c.getElementsByTagName(h)[0],m.async=1,m.src=i,p.parentNode.insertBefore(m,p)}(document,\"script\",\"https://chimpstatic.com/mcjs-connected/js/users/855c4266d070e1fa933eae8f5/78a4be3f20f4598f36ed03876.js\"); Mega Python \u00b6 Python For Everyone! Python is a simple yet powerful programming language which is easy to learn. Python gives you the power to create a wide range of applications and is used for Automation, Web Development, Analytics, Machine Learning, AI, Raspberry Pi, etc. Learn to code in Python \ud83d\udc0d with our easy to understand tutorials, videos, courses and projects to become a complete python developer. Introduction \u00b6 Mega Python is an online ninja training school \u2694\ufe0f for the Python Enthusiast and dedicated to the programming toddlers. Start by learning how to hold basic Python chopsticks \ud83e\udd62, then take the journey all the way to becoming a Python Zen Master \ud83d\udc32. We don't make any assumption about your prior programming knowledge and try to teach everything from scratch. Let the force be with you! Audience \u00b6 The resources are intended for the beginners, toddlers, hobbyist coders, dedicated but not-learnt and new programmers. It can also be used as a reference by more experienced developers. Code Sample \u00b6 All code will be in the form of following block 1 2 3 # python code def hello (): print ( 'Hello, World!' ) Please Consider a Donation \u2764\ufe0f \u00b6 All the work is provided free of cost and completely open source, but it needs your support and love to keep the activity sustainable. Any support is genuinely appreciated, you can help by sending a small donation by clicking the below link: Get Updates \u00b6 #mc_embed_signup{background:#fff; clear:left; font:14px Helvetica,Arial,sans-serif; width:500px;} /* Add your own Mailchimp form style overrides in your site stylesheet or in this style block. We recommend moving this block and the preceding CSS link to the HEAD of your HTML file. <em>/ Subscribe indicates required Email Address * First Name Last Name (function($) {window.fnames = new Array(); window.ftypes = new Array();fnames[0]='EMAIL';ftypes[0]='email';fnames[1]='FNAME';ftypes[1]='text';fnames[2]='LNAME';ftypes[2]='text';fnames[3]='ADDRESS';ftypes[3]='address';fnames[4]='PHONE';ftypes[4]='phone';fnames[5]='BIRTHDAY';ftypes[5]='birthday';}(jQuery));var $mcj = jQuery.noConflict(true); Once a week updates about new content and articles, thats it! Sponsorship \u00b6 Please contact for sponsoring the project.","title":"Home"},{"location":"#mega-python","text":"Python For Everyone! Python is a simple yet powerful programming language which is easy to learn. Python gives you the power to create a wide range of applications and is used for Automation, Web Development, Analytics, Machine Learning, AI, Raspberry Pi, etc. Learn to code in Python \ud83d\udc0d with our easy to understand tutorials, videos, courses and projects to become a complete python developer.","title":"Mega Python"},{"location":"#introduction","text":"Mega Python is an online ninja training school \u2694\ufe0f for the Python Enthusiast and dedicated to the programming toddlers. Start by learning how to hold basic Python chopsticks \ud83e\udd62, then take the journey all the way to becoming a Python Zen Master \ud83d\udc32. We don't make any assumption about your prior programming knowledge and try to teach everything from scratch. Let the force be with you!","title":"Introduction"},{"location":"#audience","text":"The resources are intended for the beginners, toddlers, hobbyist coders, dedicated but not-learnt and new programmers. It can also be used as a reference by more experienced developers.","title":"Audience"},{"location":"#code-sample","text":"All code will be in the form of following block 1 2 3 # python code def hello (): print ( 'Hello, World!' )","title":"Code Sample"},{"location":"#please-consider-a-donation","text":"All the work is provided free of cost and completely open source, but it needs your support and love to keep the activity sustainable. Any support is genuinely appreciated, you can help by sending a small donation by clicking the below link:","title":"Please Consider a Donation \u2764\ufe0f"},{"location":"#get-updates","text":"#mc_embed_signup{background:#fff; clear:left; font:14px Helvetica,Arial,sans-serif; width:500px;} /* Add your own Mailchimp form style overrides in your site stylesheet or in this style block. We recommend moving this block and the preceding CSS link to the HEAD of your HTML file. <em>/","title":"Get Updates"},{"location":"#sponsorship","text":"Please contact for sponsoring the project.","title":"Sponsorship"},{"location":"donate/","text":"Donate \u00b6 Project like this require funding to maintain and generate content. Currently this is my side project and I try to dedicate as much time and efforts possible, but with your help it can become a full time activity and I could create a lot more content for all. You can donate by clicking on the link below:","title":"Donate"},{"location":"donate/#donate","text":"Project like this require funding to maintain and generate content. Currently this is my side project and I try to dedicate as much time and efforts possible, but with your help it can become a full time activity and I could create a lot more content for all. You can donate by clicking on the link below:","title":"Donate"},{"location":"subscribe/","text":"Once a week update about new content and articles, thats it! #mc_embed_signup{background:#fff; clear:left; font:14px Helvetica,Arial,sans-serif; width:500px;} /* Add your own Mailchimp form style overrides in your site stylesheet or in this style block. We recommend moving this block and the preceding CSS link to the HEAD of your HTML file. <em>/ Subscribe indicates required Email Address * First Name Last Name (function($) {window.fnames = new Array(); window.ftypes = new Array();fnames[0]='EMAIL';ftypes[0]='email';fnames[1]='FNAME';ftypes[1]='text';fnames[2]='LNAME';ftypes[2]='text';fnames[3]='ADDRESS';ftypes[3]='address';fnames[4]='PHONE';ftypes[4]='phone';fnames[5]='BIRTHDAY';ftypes[5]='birthday';}(jQuery));var $mcj = jQuery.noConflict(true);","title":"Subscribe"},{"location":"about/about/","text":"About \u00b6 Hi, my name is Anil Kulkarni and I am passionate about coding. I am a self learned programmer and enjoy my daily dose of coding. When I am not coding you can usually find me watching movies \ud83c\udfac Background \u00b6 I have done my Mechanical Engineering and then completed Masters In Marketing Management , I was always passionate about creating things, my last venture was making \"Handmade Soaps\" and while making e-commerce website for it, coding bug caught up with me and I have been learning programming ever since. I am still a beginner and try to share whatever I learn. I am open to any new opportunities, you can checkout my profile at - LinkedIn Github You can contact me on - anil.kulkarni [at] gmail com Motivation \u00b6 As a beginner I really struggled to find the right sources for learning and ended up taking a lot of free and paid online courses, which finally ended up in confusion and frustration. So I decided to write a simple to understand, beginner oriented resources for learning how to program.","title":"About"},{"location":"about/about/#about","text":"Hi, my name is Anil Kulkarni and I am passionate about coding. I am a self learned programmer and enjoy my daily dose of coding. When I am not coding you can usually find me watching movies \ud83c\udfac","title":"About"},{"location":"about/about/#background","text":"I have done my Mechanical Engineering and then completed Masters In Marketing Management , I was always passionate about creating things, my last venture was making \"Handmade Soaps\" and while making e-commerce website for it, coding bug caught up with me and I have been learning programming ever since. I am still a beginner and try to share whatever I learn. I am open to any new opportunities, you can checkout my profile at - LinkedIn Github You can contact me on - anil.kulkarni [at] gmail com","title":"Background"},{"location":"about/about/#motivation","text":"As a beginner I really struggled to find the right sources for learning and ended up taking a lot of free and paid online courses, which finally ended up in confusion and frustration. So I decided to write a simple to understand, beginner oriented resources for learning how to program.","title":"Motivation"},{"location":"about/contribution/","text":"Contributing Content \u00b6 The entire project is open source and available on Github, including this website which is using Github Pages. You can star, fork or even better send a pull request, all of the updates would be reviewed and merged as per the schedule. Currently the project is using Mkdocs to generate content, but aims to use Django Framework sometime in the future. No technical skills ? No Problem, you can still contribute by - Generating creative/graphic content. Check for any grammar/spelling mistakes. Letting us know for any broken links, bugs or incorrect content. Sponsoring custom swag like T-Shirts, caps, stickers, etc. Writing social media posts.","title":"Contributing to Mega Python"},{"location":"about/contribution/#contributing-content","text":"The entire project is open source and available on Github, including this website which is using Github Pages. You can star, fork or even better send a pull request, all of the updates would be reviewed and merged as per the schedule. Currently the project is using Mkdocs to generate content, but aims to use Django Framework sometime in the future. No technical skills ? No Problem, you can still contribute by - Generating creative/graphic content. Check for any grammar/spelling mistakes. Letting us know for any broken links, bugs or incorrect content. Sponsoring custom swag like T-Shirts, caps, stickers, etc. Writing social media posts.","title":"Contributing Content"},{"location":"about/sponsorship/","text":"Sponsorship \u00b6","title":"Sponsoring Mega Python"},{"location":"about/sponsorship/#sponsorship","text":"","title":"Sponsorship"},{"location":"basics/data-types/","text":"TODO \u00b6","title":"Data Types"},{"location":"basics/data-types/#todo","text":"","title":"TODO"},{"location":"basics/dictionary/","text":"TODO \u00b6","title":"Dictionary"},{"location":"basics/dictionary/#todo","text":"","title":"TODO"},{"location":"basics/error-handling/","text":"TODO \u00b6","title":"Error Handling"},{"location":"basics/error-handling/#todo","text":"","title":"TODO"},{"location":"basics/file-handling/","text":"TODO \u00b6","title":"File Handling"},{"location":"basics/file-handling/#todo","text":"","title":"TODO"},{"location":"basics/functions/","text":"TODO \u00b6","title":"Functions"},{"location":"basics/functions/#todo","text":"","title":"TODO"},{"location":"basics/if-else/","text":"TODO \u00b6","title":"If Else"},{"location":"basics/if-else/#todo","text":"","title":"TODO"},{"location":"basics/installation/","text":"Installation \u00b6 Learn how to install Python 3 on your machine. But, before actually installing there are some points that I would like you to note. Python actually comes pre-installed on most operating system these days, but its the old and legacy version Python 2. Python 2 will officially be retiring on Jan 1 st , 2020, so its ideal to straight away get working with Python 3. Check out the installation instructions as per your operating system. Installing on Windows \u00b6 Installing Python 3 on Windows is just as easy as installing any other program, in addition to Python 3, I would highly recommend installing Git Bash , so that you can work with the exact same commands in the tutorial as mine and we need not keeping on switching between operating systems. Ofcouse, I will let you know whenever there are differences. Navigate to following link and download the setup file 1 https://www.python.org/downloads/windows/ Under Stable Releases check out your system and download the setup file accordingly, in most cases your system should be 64 bit, if that's the case you can download the following setup file 1 Windows x86-64 executable installer After downloading you can install it as you would install any other program. The installer will install everything and also setup environment variables. Installing on Mac \u00b6 Navigate to following link and download the setup file 1 https://www.python.org/downloads/mac-osx/ Under Stable Releases you can download the following file 1 macOS 64-bit installer And then install it as any other program, it will automatically setup environment variables for you. Alternatively If you are using brew, then installing Python is very simple, open your terminal and type 1 brew install python By default brew will install python 3 to the following directory - 1 /usr/local/bin/python3 You can check it by typing the following on your terminal 1 which python3 Installing on Linux \u00b6 Installing Python 3.7 on Ubuntu. If you are using Ubuntu 19.04 Disco Dingo then you already have Python 3.7.3 pre-installed, just sit back and you can directly skip to \"Setting Up Alias\" For others, start by updating ubuntu, open your terminal and type the following - 1 2 sudo apt update sudo apt install software-properties-common Add the repository 1 sudo add-apt-repository ppa:deadsnakes/ppa Install Python 3.7 1 sudo apt install python3.7 Checking Version \u00b6 You can check the installed python version. 1 python3 --version Python 3 also installs \"pip3\" by default, it is the package manager for python, you can check its version by 1 pip3 --version Setting Up Alias (Optional) \u00b6 Since Python 2 comes pre-installed on almost all the operating systems, the default python keyword points to Python 2, for using Python 3 we need to type python3 , which for me gets a little boring and unintuitive since Python 2 will be reaching its end of life soon. So, I just setup a alias, which simply means that, I say to my computer, \"Whenever I type python it has to refer to Python 3 and not to Python 2\". To setup a alias open your terminal and navigate to your home directory 1 cd If you are using bash, open the bash_profile, since I am using Visual Studio Code, I can directly open the file by typing 1 code .bash_profile If you are using atom, you can open by 1 atom .bash_profile Or if you are using PyCharm 1 charm .bash_profile Instead of bash if you are using zsh, you can open .zshrc 1 code .zshrc Add the following 2 lines at the end of the file 1 2 alias python='python3' alias pip='pip3' Now close and restart your terminal, to check if its working properly type the following 1 python --version It should show the current Python 3 installed version. Setting up your development environment and code editor \u00b6 (External Links) Excellent environment setup videos by Corey Schafer - For Windows For MacOS Please Consider a Donation \u2764\ufe0f \u00b6 All the work is provided free of cost and completely open source, but it needs your support and love to keep the activity sustainable. Any support is genuinely appreciated, you can help by sending a small donation by clicking the below link:","title":"Installation"},{"location":"basics/installation/#installation","text":"Learn how to install Python 3 on your machine. But, before actually installing there are some points that I would like you to note. Python actually comes pre-installed on most operating system these days, but its the old and legacy version Python 2. Python 2 will officially be retiring on Jan 1 st , 2020, so its ideal to straight away get working with Python 3. Check out the installation instructions as per your operating system.","title":"Installation"},{"location":"basics/installation/#installing-on-windows","text":"Installing Python 3 on Windows is just as easy as installing any other program, in addition to Python 3, I would highly recommend installing Git Bash , so that you can work with the exact same commands in the tutorial as mine and we need not keeping on switching between operating systems. Ofcouse, I will let you know whenever there are differences. Navigate to following link and download the setup file 1 https://www.python.org/downloads/windows/ Under Stable Releases check out your system and download the setup file accordingly, in most cases your system should be 64 bit, if that's the case you can download the following setup file 1 Windows x86-64 executable installer After downloading you can install it as you would install any other program. The installer will install everything and also setup environment variables.","title":"Installing on Windows"},{"location":"basics/installation/#installing-on-mac","text":"Navigate to following link and download the setup file 1 https://www.python.org/downloads/mac-osx/ Under Stable Releases you can download the following file 1 macOS 64-bit installer And then install it as any other program, it will automatically setup environment variables for you. Alternatively If you are using brew, then installing Python is very simple, open your terminal and type 1 brew install python By default brew will install python 3 to the following directory - 1 /usr/local/bin/python3 You can check it by typing the following on your terminal 1 which python3","title":"Installing on Mac"},{"location":"basics/installation/#installing-on-linux","text":"Installing Python 3.7 on Ubuntu. If you are using Ubuntu 19.04 Disco Dingo then you already have Python 3.7.3 pre-installed, just sit back and you can directly skip to \"Setting Up Alias\" For others, start by updating ubuntu, open your terminal and type the following - 1 2 sudo apt update sudo apt install software-properties-common Add the repository 1 sudo add-apt-repository ppa:deadsnakes/ppa Install Python 3.7 1 sudo apt install python3.7","title":"Installing on Linux"},{"location":"basics/installation/#checking-version","text":"You can check the installed python version. 1 python3 --version Python 3 also installs \"pip3\" by default, it is the package manager for python, you can check its version by 1 pip3 --version","title":"Checking Version"},{"location":"basics/installation/#setting-up-alias-optional","text":"Since Python 2 comes pre-installed on almost all the operating systems, the default python keyword points to Python 2, for using Python 3 we need to type python3 , which for me gets a little boring and unintuitive since Python 2 will be reaching its end of life soon. So, I just setup a alias, which simply means that, I say to my computer, \"Whenever I type python it has to refer to Python 3 and not to Python 2\". To setup a alias open your terminal and navigate to your home directory 1 cd If you are using bash, open the bash_profile, since I am using Visual Studio Code, I can directly open the file by typing 1 code .bash_profile If you are using atom, you can open by 1 atom .bash_profile Or if you are using PyCharm 1 charm .bash_profile Instead of bash if you are using zsh, you can open .zshrc 1 code .zshrc Add the following 2 lines at the end of the file 1 2 alias python='python3' alias pip='pip3' Now close and restart your terminal, to check if its working properly type the following 1 python --version It should show the current Python 3 installed version.","title":"Setting Up Alias (Optional)"},{"location":"basics/installation/#setting-up-your-development-environment-and-code-editor","text":"(External Links) Excellent environment setup videos by Corey Schafer - For Windows For MacOS","title":"Setting up your development environment and code editor"},{"location":"basics/installation/#please-consider-a-donation","text":"All the work is provided free of cost and completely open source, but it needs your support and love to keep the activity sustainable. Any support is genuinely appreciated, you can help by sending a small donation by clicking the below link:","title":"Please Consider a Donation \u2764\ufe0f"},{"location":"basics/introduction/","text":"Introduction to Python 3 \u00b6 What the hell...python ? Isn't it supposed to be a reptile! Well, it also happens to be a really great programming language. If you are just starting your programming journey, Python is the right place to start, it offers nice and clean syntax, vast library, online available content, huge community, etc. Today's software industry has a huge collection of programming languages like C, C++, Java, Javascript, Go, Rust, etc. Each of the language has its own pros and cons, there is no 'One Size Fits All' concept and one has to really consider the project requirements in order to select a language. So, that brings us to the next question, WHY Choose PYTHON ? Why Python? \ud83d\udc0d \u00b6 Simple answer is, because its Amazing! Surely python also has its share of pros and cons, but offers a lot more in return, such as follows - Are you a beginner ? Python is the perfect place to start, it will help you to understand a lot of the basic programming concepts and then you can move on to other languages if required. Python really helps you to be productive, you can achieve a lot more in few lines of code. In addition to it, Python is very robust, performant and provides high scalability. Python offers a simple and clean syntax, no semicolons! Python has a vast library support, you can find a library for almost any functionality you can think off! Web development no problem! Python has robust web frameworks like Django, Flask, Pyramid, etc. Creating command line applications, again no problem! Python is great fit for Machine Learning, Artificial Intelligence, Business Analytics, etc. Need to work with files such as csv, xls, pdf, zip, etc, ...aah just a piece of cake. Python is great for rapid development, you can easily bootstrap a project with the vast eco-system that python provides. Sounds exciting! Let's dive more into it. What is Python? \u00b6 As you already know that python is a programming language, for now just remmember its an interpreted language, i.e the python interpreter acts like an interface between you and the machine. You write in English and python converts it into a language that the machine can understand, simple isn't it? Who's using Python? \u00b6 Almost everyone uses python, from big companies like Google, Facebook, Dropbox, Microsoft, etc to research institutes like CERN, NASA, etc, everyone uses python! What will I learn here? \u00b6 Mega Python aims to teach Python 3 right from basics to advanced. Ofcouse, its not possible to cover everything that python has to offer, but it will surely teach you enough to get started on your own. Along with the language itself, Mega Python also aims to introduce topics in web development, analytics, machine learning and AI. Please Consider a Donation \u2764\ufe0f \u00b6 All the work is provided free of cost and completely open source, but it needs your support and love to keep the activity sustainable. Any support is genuinely appreciated, you can help by sending a small donation by clicking the below link:","title":"Introduction"},{"location":"basics/introduction/#introduction-to-python-3","text":"What the hell...python ? Isn't it supposed to be a reptile! Well, it also happens to be a really great programming language. If you are just starting your programming journey, Python is the right place to start, it offers nice and clean syntax, vast library, online available content, huge community, etc. Today's software industry has a huge collection of programming languages like C, C++, Java, Javascript, Go, Rust, etc. Each of the language has its own pros and cons, there is no 'One Size Fits All' concept and one has to really consider the project requirements in order to select a language. So, that brings us to the next question, WHY Choose PYTHON ?","title":"Introduction to Python 3"},{"location":"basics/introduction/#why-python","text":"Simple answer is, because its Amazing! Surely python also has its share of pros and cons, but offers a lot more in return, such as follows - Are you a beginner ? Python is the perfect place to start, it will help you to understand a lot of the basic programming concepts and then you can move on to other languages if required. Python really helps you to be productive, you can achieve a lot more in few lines of code. In addition to it, Python is very robust, performant and provides high scalability. Python offers a simple and clean syntax, no semicolons! Python has a vast library support, you can find a library for almost any functionality you can think off! Web development no problem! Python has robust web frameworks like Django, Flask, Pyramid, etc. Creating command line applications, again no problem! Python is great fit for Machine Learning, Artificial Intelligence, Business Analytics, etc. Need to work with files such as csv, xls, pdf, zip, etc, ...aah just a piece of cake. Python is great for rapid development, you can easily bootstrap a project with the vast eco-system that python provides. Sounds exciting! Let's dive more into it.","title":"Why Python? \ud83d\udc0d"},{"location":"basics/introduction/#what-is-python","text":"As you already know that python is a programming language, for now just remmember its an interpreted language, i.e the python interpreter acts like an interface between you and the machine. You write in English and python converts it into a language that the machine can understand, simple isn't it?","title":"What is Python?"},{"location":"basics/introduction/#whos-using-python","text":"Almost everyone uses python, from big companies like Google, Facebook, Dropbox, Microsoft, etc to research institutes like CERN, NASA, etc, everyone uses python!","title":"Who's using Python?"},{"location":"basics/introduction/#what-will-i-learn-here","text":"Mega Python aims to teach Python 3 right from basics to advanced. Ofcouse, its not possible to cover everything that python has to offer, but it will surely teach you enough to get started on your own. Along with the language itself, Mega Python also aims to introduce topics in web development, analytics, machine learning and AI.","title":"What will I learn here?"},{"location":"basics/introduction/#please-consider-a-donation","text":"All the work is provided free of cost and completely open source, but it needs your support and love to keep the activity sustainable. Any support is genuinely appreciated, you can help by sending a small donation by clicking the below link:","title":"Please Consider a Donation \u2764\ufe0f"},{"location":"basics/list/","text":"TODO \u00b6","title":"List"},{"location":"basics/list/#todo","text":"","title":"TODO"},{"location":"basics/loops/","text":"TODO \u00b6","title":"Loops"},{"location":"basics/loops/#todo","text":"","title":"TODO"},{"location":"basics/oop/","text":"TODO \u00b6","title":"Object Oriented Programming"},{"location":"basics/oop/#todo","text":"","title":"TODO"},{"location":"basics/packages/","text":"TODO \u00b6","title":"Packages"},{"location":"basics/packages/#todo","text":"","title":"TODO"},{"location":"basics/set/","text":"TODO \u00b6","title":"Set"},{"location":"basics/set/#todo","text":"","title":"TODO"},{"location":"basics/static-typing/","text":"TODO \u00b6","title":"Static Typing"},{"location":"basics/static-typing/#todo","text":"","title":"TODO"},{"location":"basics/strings/","text":"TODO \u00b6","title":"Strings"},{"location":"basics/strings/#todo","text":"","title":"TODO"},{"location":"basics/tuple/","text":"TODO \u00b6","title":"Tuple"},{"location":"basics/tuple/#todo","text":"","title":"TODO"},{"location":"basics/variables/","text":"Variables \u00b6 Introduction \u00b6 Let us see how to create variables in Python. In order to understand variables, I'd like you to meet Billy , he is a friendly dinosaur and is currently planning for his birthday party. Billy is very excited about the party and is busy thinking about packaging all the return gifts. Billy has three type of return gifts - Balloons Party Hats Crackers Declaring Variables \u00b6 Let's start by creating a file called as 'variables.py' anywhere on your computer and open it in your code editor and type the following - 1 2 box = 'Baloons' print ( box ) In order to run the file, open the terminal and navigate to the directory which contains the file. Suppose I have created that file on my desktop, then the path on my terminal will be - 1 $ cd /Users/ { your username } /Desktop In order to run the file, type the following in your terminal - 1 $ python3 variables.py Output will be as follows - 1 Baloons Congratulation! You just created a variable and printed its value. Understanding Variables \u00b6 Let us again have a look at the code we wrote above 1 2 box = 'Baloons' print ( box ) You are declaring a variable called box and assigning it a value of Baloons , note the single quote around it, you can also use double quotes as follows and it will give you the same output. 1 2 box = \"Baloons\" print ( box ) Single and double quotes can be used interchangeably, but be sure to use a consistent style all across your code. Printing Values \u00b6 1 2 box = 'Baloons' print ( box ) Line 2 prints the value of the variable 'box' to the terminal, which in our case is 'Baloons'. 1 Baloons print() is a builtin python function which we can easily use to print values. Re-assigning Values \u00b6 Suppose, now Billy wants to pack 'Party Hats' instead of 'Baloons', then we can re-assign a new value to the same variable 'box' 1 2 box = 'Party Hats' print ( box ) You can again check the value by running the file 1 python3 variables.py Output 1 Party Hats Notice that our value has now changed from 'Baloons' to 'Party Hats'. And now finally Billy wants to pack 'Crackers', so we can once again re-assign 'box' to a new value of 'Crackers' 1 2 box = 'Crackers' print ( box ) If you run the file again, this time output will be 1 Crackers Full Code \u00b6 1 2 3 4 5 6 7 8 9 10 # variables.py box = 'Baloons' print ( box ) # prints -> Baloons box = 'Party Hats' print ( box ) # prints -> Party Hats box = 'Crackers' print ( box ) # prints -> Crackers Conclusion \u00b6 As you must have noticed box is just a placeholder, we can assign different values to it from time to time, thus it is know as a variable, i.e values can change but the placeholder remains the same. Please Consider a Donation \u2764\ufe0f \u00b6 All the work is provided free of cost and completely open source, but it needs your support and love to keep the activity sustainable. Any support is genuinely appreciated, you can help by sending a small donation by clicking the below link:","title":"Variables"},{"location":"basics/variables/#variables","text":"","title":"Variables"},{"location":"basics/variables/#introduction","text":"Let us see how to create variables in Python. In order to understand variables, I'd like you to meet Billy , he is a friendly dinosaur and is currently planning for his birthday party. Billy is very excited about the party and is busy thinking about packaging all the return gifts. Billy has three type of return gifts - Balloons Party Hats Crackers","title":"Introduction"},{"location":"basics/variables/#declaring-variables","text":"Let's start by creating a file called as 'variables.py' anywhere on your computer and open it in your code editor and type the following - 1 2 box = 'Baloons' print ( box ) In order to run the file, open the terminal and navigate to the directory which contains the file. Suppose I have created that file on my desktop, then the path on my terminal will be - 1 $ cd /Users/ { your username } /Desktop In order to run the file, type the following in your terminal - 1 $ python3 variables.py Output will be as follows - 1 Baloons Congratulation! You just created a variable and printed its value.","title":"Declaring Variables"},{"location":"basics/variables/#understanding-variables","text":"Let us again have a look at the code we wrote above 1 2 box = 'Baloons' print ( box ) You are declaring a variable called box and assigning it a value of Baloons , note the single quote around it, you can also use double quotes as follows and it will give you the same output. 1 2 box = \"Baloons\" print ( box ) Single and double quotes can be used interchangeably, but be sure to use a consistent style all across your code.","title":"Understanding Variables"},{"location":"basics/variables/#printing-values","text":"1 2 box = 'Baloons' print ( box ) Line 2 prints the value of the variable 'box' to the terminal, which in our case is 'Baloons'. 1 Baloons print() is a builtin python function which we can easily use to print values.","title":"Printing Values"},{"location":"basics/variables/#re-assigning-values","text":"Suppose, now Billy wants to pack 'Party Hats' instead of 'Baloons', then we can re-assign a new value to the same variable 'box' 1 2 box = 'Party Hats' print ( box ) You can again check the value by running the file 1 python3 variables.py Output 1 Party Hats Notice that our value has now changed from 'Baloons' to 'Party Hats'. And now finally Billy wants to pack 'Crackers', so we can once again re-assign 'box' to a new value of 'Crackers' 1 2 box = 'Crackers' print ( box ) If you run the file again, this time output will be 1 Crackers","title":"Re-assigning Values"},{"location":"basics/variables/#full-code","text":"1 2 3 4 5 6 7 8 9 10 # variables.py box = 'Baloons' print ( box ) # prints -> Baloons box = 'Party Hats' print ( box ) # prints -> Party Hats box = 'Crackers' print ( box ) # prints -> Crackers","title":"Full Code"},{"location":"basics/variables/#conclusion","text":"As you must have noticed box is just a placeholder, we can assign different values to it from time to time, thus it is know as a variable, i.e values can change but the placeholder remains the same.","title":"Conclusion"},{"location":"basics/variables/#please-consider-a-donation","text":"All the work is provided free of cost and completely open source, but it needs your support and love to keep the activity sustainable. Any support is genuinely appreciated, you can help by sending a small donation by clicking the below link:","title":"Please Consider a Donation \u2764\ufe0f"},{"location":"contact/contact/","text":"Contact \u00b6 Its always nice to hear from the community, please feel free to drop a mail to - megapythonofficial [at] gmail (dot) com I normally try to get back immediately or within 12 hrs of receiving the mail. Or You can always socially connect - Youtube Twitter LinkedIn","title":"Contact"},{"location":"contact/contact/#contact","text":"Its always nice to hear from the community, please feel free to drop a mail to - megapythonofficial [at] gmail (dot) com I normally try to get back immediately or within 12 hrs of receiving the mail. Or You can always socially connect - Youtube Twitter LinkedIn","title":"Contact"},{"location":"django/introduction/","text":"","title":"Introduction"},{"location":"django/basics/installation/","text":"","title":"Installation"},{"location":"django/basics/virtual_environment/","text":"","title":"Virutal Environment"},{"location":"django/rest_framework/introduction/","text":"","title":"Introduction"},{"location":"intermediate/abc-class/","text":"","title":"ABC Class"},{"location":"intermediate/async-await/","text":"","title":"Async Await"},{"location":"intermediate/cli/","text":"","title":"Command Line Applications"},{"location":"intermediate/database/","text":"","title":"Database"},{"location":"intermediate/functional-programming/","text":"","title":"Functional Programming"},{"location":"intermediate/generators-iterators/","text":"","title":"Generators and Iterators"},{"location":"intermediate/intro-http/","text":"","title":"Introduction to HTTP"},{"location":"intermediate/introduction/","text":"Intermediate Python \u00b6 TODO","title":"Introduction"},{"location":"intermediate/introduction/#intermediate-python","text":"TODO","title":"Intermediate Python"},{"location":"intermediate/lambda/","text":"","title":"Lambda"},{"location":"intermediate/list-comprehensions/","text":"","title":"List Comprehensions"},{"location":"intermediate/logging/","text":"","title":"Logging"},{"location":"intermediate/magic-methods/","text":"","title":"Magic Methods"},{"location":"intermediate/multi-threading/","text":"","title":"Multi Threading"},{"location":"intermediate/named-tuple/","text":"","title":"Named Tuple"},{"location":"intermediate/regular-expression/","text":"","title":"Regular Expressions"},{"location":"intermediate/testing/","text":"","title":"Testing"}]}